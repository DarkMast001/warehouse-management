// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WarehouseManagement.DataAccess.Postgres;

#nullable disable

namespace WarehouseManagement.DataAccess.Postgres.Migrations
{
    [DbContext(typeof(WarehouseDbContext))]
    [Migration("20250806103051_UpdateShipmentEntities")]
    partial class UpdateShipmentEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WarehouseManagement.DataAccess.Postgres.Models.BalanceEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("BalanceID");

                    b.Property<Guid>("MeasureUnitId")
                        .HasColumnType("uuid")
                        .HasColumnName("MeasureUnitID");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("ResourceID");

                    b.HasKey("Id");

                    b.HasAlternateKey("ResourceId", "MeasureUnitId");

                    b.HasIndex("MeasureUnitId")
                        .IsUnique();

                    b.HasIndex("ResourceId")
                        .IsUnique();

                    b.ToTable("Balance", (string)null);
                });

            modelBuilder.Entity("WarehouseManagement.DataAccess.Postgres.Models.ClientEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("ClientID");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("ArchivingState")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Clients", (string)null);
                });

            modelBuilder.Entity("WarehouseManagement.DataAccess.Postgres.Models.MeasureUnitEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("MeasureUnitID");

                    b.Property<string>("ArchivingState")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("MeasureUnits", (string)null);
                });

            modelBuilder.Entity("WarehouseManagement.DataAccess.Postgres.Models.ReceiptDocumentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("ReceiptDocumentID");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("ReceiptDocument", (string)null);
                });

            modelBuilder.Entity("WarehouseManagement.DataAccess.Postgres.Models.ReceiptResourceEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("ReceiptResourceID");

                    b.Property<Guid>("MeasureUnitId")
                        .HasColumnType("uuid")
                        .HasColumnName("MeasureUnitID");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ReceiptDocumentId")
                        .HasColumnType("uuid")
                        .HasColumnName("ReceiptDocumentID");

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("ResourceID");

                    b.HasKey("Id");

                    b.HasIndex("MeasureUnitId");

                    b.HasIndex("ReceiptDocumentId");

                    b.HasIndex("ResourceId");

                    b.ToTable("ReceiptResource", (string)null);
                });

            modelBuilder.Entity("WarehouseManagement.DataAccess.Postgres.Models.ResourceEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("ResourceID");

                    b.Property<string>("ArchivingState")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Resources", (string)null);
                });

            modelBuilder.Entity("WarehouseManagement.DataAccess.Postgres.Models.ShipmentDocumentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("ShipmentDocumentID");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid")
                        .HasColumnName("ClientID");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("DocumentState")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("ShipmentDocument", (string)null);
                });

            modelBuilder.Entity("WarehouseManagement.DataAccess.Postgres.Models.ShipmentResourceEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("ShipmentResourceID");

                    b.Property<Guid>("MeasureUnitId")
                        .HasColumnType("uuid")
                        .HasColumnName("MeasureUnitID");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("ResourceID");

                    b.Property<Guid?>("ShipmentDocumentId")
                        .HasColumnType("uuid")
                        .HasColumnName("ShipmentDocumentID");

                    b.HasKey("Id");

                    b.HasIndex("MeasureUnitId");

                    b.HasIndex("ResourceId");

                    b.HasIndex("ShipmentDocumentId");

                    b.ToTable("ShipmentResource", (string)null);
                });

            modelBuilder.Entity("WarehouseManagement.DataAccess.Postgres.Models.BalanceEntity", b =>
                {
                    b.HasOne("WarehouseManagement.DataAccess.Postgres.Models.MeasureUnitEntity", "MeasureUnit")
                        .WithOne()
                        .HasForeignKey("WarehouseManagement.DataAccess.Postgres.Models.BalanceEntity", "MeasureUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarehouseManagement.DataAccess.Postgres.Models.ResourceEntity", "Resource")
                        .WithOne()
                        .HasForeignKey("WarehouseManagement.DataAccess.Postgres.Models.BalanceEntity", "ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MeasureUnit");

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("WarehouseManagement.DataAccess.Postgres.Models.ReceiptResourceEntity", b =>
                {
                    b.HasOne("WarehouseManagement.DataAccess.Postgres.Models.MeasureUnitEntity", "MeasureUnit")
                        .WithMany()
                        .HasForeignKey("MeasureUnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WarehouseManagement.DataAccess.Postgres.Models.ReceiptDocumentEntity", "ReceiptDocument")
                        .WithMany("ReceiptResources")
                        .HasForeignKey("ReceiptDocumentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WarehouseManagement.DataAccess.Postgres.Models.ResourceEntity", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MeasureUnit");

                    b.Navigation("ReceiptDocument");

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("WarehouseManagement.DataAccess.Postgres.Models.ShipmentDocumentEntity", b =>
                {
                    b.HasOne("WarehouseManagement.DataAccess.Postgres.Models.ClientEntity", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("WarehouseManagement.DataAccess.Postgres.Models.ShipmentResourceEntity", b =>
                {
                    b.HasOne("WarehouseManagement.DataAccess.Postgres.Models.MeasureUnitEntity", "MeasureUnit")
                        .WithMany()
                        .HasForeignKey("MeasureUnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WarehouseManagement.DataAccess.Postgres.Models.ResourceEntity", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WarehouseManagement.DataAccess.Postgres.Models.ShipmentDocumentEntity", "ShipmentDocument")
                        .WithMany("ShipmentResources")
                        .HasForeignKey("ShipmentDocumentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("MeasureUnit");

                    b.Navigation("Resource");

                    b.Navigation("ShipmentDocument");
                });

            modelBuilder.Entity("WarehouseManagement.DataAccess.Postgres.Models.ReceiptDocumentEntity", b =>
                {
                    b.Navigation("ReceiptResources");
                });

            modelBuilder.Entity("WarehouseManagement.DataAccess.Postgres.Models.ShipmentDocumentEntity", b =>
                {
                    b.Navigation("ShipmentResources");
                });
#pragma warning restore 612, 618
        }
    }
}
